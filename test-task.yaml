apiVersion: apps/v1
kind: Deployment

metadata:
  name: test-deploy
  labels:
    app: test-cluster

spec:
  # 2 желаемых реплики под примерную среднюю нагрузку, с
  # добавлением еще 2 нодов ниже, с помощью maxSurge
  # у убавлением одного, с помощью maxUnavailable
  # https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1
  selector:
    matchLabels:
      app: test-cluster

  template:
    metadata:
      labels:
        app: test-cluster

    # имя и образ шаблонного контейнера
    # который симулирует 10 секунд инициализации
    spec:
      containers:
        - name: busybox
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c", "sleep 1s && echo 'healthy' > /tmp/healthy"]

          # ограничения на использование ресурсов
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              cpu: 100m # основной запрос на 0.1 CPU
              memory: 128Mi
            limits:
              # максимальное ограничение для пиковых периодов,
              # требуется больше тестирования чтобы найти оптимальный минимальный лимит
              cpu: 1500m
              memory: 140Mi # ограничение к 128 МБ, с некоторым разрешением

          # пример проверки инициализации с учетом начального ожидания
          # https://kubernetes.io/docs/concepts/configuration/liveness-readiness-startup-probes/
          # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
          # livenessProbe:
          #   initialDelaySeconds: 2
          #   periodSeconds: 5
          #   exec:
          #     command: ["cat", "/tmp/healthy"]

    #   # распределение по зонам "zone-1-3" с помощью affinity
    #   # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #           - matchExpressions:
    #               - key: topology.kubernetes.io/zone
    #                 operator: In
    #                 values:
    #                   - zone-1
    #                   # - zone-2
    #                   # - zone-3
    #
    # # Дополнительные ноды на периоы пика
    # # https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#max-surge
    # strategy:
    #   type: RollingUpdate
    #   rollingUpdate:
    #     maxSurge: 50%
    #     maxUnavailable: 50%
